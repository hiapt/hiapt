--  관리비 및 결제  db 시작*********************************************************

drop table bill cascade constraints;
-- BILL 테이블 생성(NULL로)
create table bill(
	MERCHANT_UID NUMBER		NOT NULL,
  USERID 	VARCHAR2(10)		NULL,
	USERNAME VARCHAR2(20)		NULL,
	BILL_YEAR_MONTH	DATE NULL,
	CALCULATE_START_DAY	DATE NULL,
	CALCULATE_END_DAY	DATE NULL,
	IMPOSE_END_DATE DATE NULL,	
	ACCEPT_DATE	DATE NULL,
  CUTOFF_DATE	DATE NULL,
	IMPOSE_STATUS	VARCHAR2(12) NULL,
	IMPOSE_COUNT NUMBER DEFAULT 0	NULL,
	IMPOSE_FINISH	CHAR	DEFAULT 'N'	NULL,
	GENERAL_COST 	NUMBER	DEFAULT 0	NULL,
  guard_cost 	NUMBER	DEFAULT 0	NULL,
	clean_cost	 NUMBER	DEFAULT 0	NULL,
	DISINFECT_COST 	NUMBER	DEFAULT 0	NULL,
	ELEVATOR_COST 	NUMBER	DEFAULT 0	NULL,
	REPAIR_COST 	NUMBER	DEFAULT 0	NULL,
	commission 	NUMBER	DEFAULT 0	NULL,
	FIREINSURANCE_COST	NUMBER	DEFAULT 0	NULL,	
	electric_cost 	NUMBER	DEFAULT 0	NULL,	
	TV_COST	NUMBER	DEFAULT 2500	NULL,
  WATER_COST 	NUMBER	DEFAULT 0	NULL,
	heating_cost 	NUMBER	DEFAULT 0	NULL,
	HWATER_COST	NUMBER	DEFAULT 0	NULL,	  
  ALLELECTRIC_COAT	NUMBER	DEFAULT 0	NULL,	
  ALLWATER_COST 	NUMBER	DEFAULT 0	NULL,  
	ELECTRIC_USAGE 	NUMBER	DEFAULT 0	NULL,	
	water_usage	NUMBER	DEFAULT 0	NULL,
  HEATING_USAGE	NUMBER	DEFAULT 0	NULL,  
	HWATER_USAGE 	NUMBER	DEFAULT 0	NULL,  
	ARREARS	NUMBER DEFAULT 0 NULL,  
	ETC	VARCHAR2(20) NULL,
	VBANK_NUM	VARCHAR2(20) NULL,
  CONSTRAINT PK_BILL PRIMARY KEY(MERCHANT_UID), 
  CONSTRAINT CK_BILL CHECK (IMPOSE_FINISH IN ('Y', 'N'))
);

--  BILL COMMENT
COMMENT ON COLUMN bill.merchant_uid IS '고유고지서번호';
COMMENT ON COLUMN bill.userid IS '동/호수';
COMMENT ON COLUMN BILL.USERNAME IS '이름';
COMMENT ON COLUMN BILL.BILL_YEAR_MONTH IS '고지서부과월';
COMMENT ON COLUMN BILL.CALCULATE_START_DAY IS '산출기간시작일';
COMMENT ON COLUMN BILL.CALCULATE_END_DAY IS '산출기간마감일';
COMMENT ON COLUMN BILL.IMPOSE_END_DATE IS '부과마감일';
COMMENT ON COLUMN bill.accept_date IS '출력의뢰일시';
COMMENT ON COLUMN bill.cutoff_date IS '납부마감일';
COMMENT ON COLUMN bill.impose_status IS '부과진행';
COMMENT ON COLUMN bill.impose_count IS '부과마감횟수';
COMMENT ON COLUMN BILL.IMPOSE_FINISH IS '부과완료';
COMMENT ON COLUMN bill.general_cost IS '일반관리비';
COMMENT ON COLUMN bill.clean_cost IS '청소비';
COMMENT ON COLUMN bill.disinfect_cost IS '소독비';
COMMENT ON COLUMN bill.elevator_cost IS '승강기유지비';
COMMENT ON COLUMN bill.repair_cost IS '수선유지비';
COMMENT ON COLUMN BILL.GUARD_COST IS '경비비';
COMMENT ON COLUMN bill.fireinsurance_cost IS '화재보험료';
COMMENT ON COLUMN BILL.COMMISSION IS '위탁관리수수료';
COMMENT ON COLUMN bill.electric_cost IS '세대전기료';
COMMENT ON COLUMN bill.allelectric_coat IS '공동전기료';
COMMENT ON COLUMN bill.tv_cost IS 'TV수신료';
COMMENT ON COLUMN bill.heating_cost IS '난방사용료';
COMMENT ON COLUMN bill.hwater_cost IS '온수사용료';
COMMENT ON COLUMN bill.water_cost IS '세대수도료';
COMMENT ON COLUMN BILL.ALLWATER_COST IS '공동수도료';
COMMENT ON COLUMN bill.electric_usage IS '전기사용량';
COMMENT ON COLUMN bill.heating_usage IS '난방사용량';
COMMENT ON COLUMN BILL.HWATER_USAGE IS '온수사용량';
COMMENT ON COLUMN bill.water_usage IS '수도사용량';
COMMENT ON COLUMN bill.arrears IS '미납액';
COMMENT ON COLUMN BILL.ETC IS '비고';
COMMENT ON COLUMN BILL.VBANK_NUM IS '계좌번호';
--------------------------------------------------------------
DROP SEQUENCE BILL_SEQ;
--BILL 시퀀스 생성
CREATE SEQUENCE BILL_SEQ
START WITH 10000000000001
INCREMENT BY 1
MAXVALUE 90000000000000
MINVALUE 1
NOCYCLE
NOCACHE;

-- bill insert
INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/09/01',
'2019/08/01','2019/08/31','2019/08/31','2019/08/31','2019/09/30',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  73510, 13970, DEFAULT, 0, 0, 1710, 860,
  404, 15, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/08/01',
'2019/07/01','2019/07/31','2019/07/31','2019/07/31','2019/08/31',
  '완료',1,'Y',
  20520, 20870, 13500, 770, 3920, 2080, 650, 960,
  73510, 2140, DEFAULT, 0, 0, 1710, 860,
  404, 32, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'202-101','허용순','2019/08/01',
'2019/07/01','2019/07/31','2019/07/31','2019/07/31','2019/08/31',
  '완료',1,'Y',
  29040, 29530, 19110, 1080, 4660, 2940, 2570, 910,
  73510, 2140, DEFAULT, 0, 0, 1710, 860,
  404, 32, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/07/01',
'2019/06/01','2019/06/30','2019/06/30','2019/06/30','2019/07/31',
  '완료',1,'Y',
  20390, 20870, 13500, 770, 3290, 1810, 650, 810,
  73510, 13830, DEFAULT, 0, 0, 1610, 890,
  404, 15, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/06/01',
'2019/05/01','2019/05/31','2019/05/31','2019/05/31','2019/06/30',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  73510, 13830, DEFAULT, 0, 0, 1850, 860,
  404, 15, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/05/01',
'2019/04/01','2019/04/30','2019/04/30','2019/04/30','2019/05/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  73510, 13830, DEFAULT, 0, 0, 1850, 860,
  404, 15, 0, 0,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/04/01',
'2019/03/01','2019/03/31','2019/03/31','2019/03/31','2019/04/30',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  73510, 13830, DEFAULT, 9680, 23100, 1850, 860,
  404, 15,1.2, 5.5,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/03/01',
'2019/02/01','2019/02/28','2019/02/28','2019/02/28','2019/03/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  73510, 13830, DEFAULT, 12280, 31820, 1850, 860,
  404, 15,1.5, 6.5,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/02/01',
'2019/01/01','2019/01/31','2019/01/31','2019/01/31','2019/02/28',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  86410, 16300, DEFAULT, 60760, 42000, 1850, 860,
  410, 27, 37, 12,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2019/01/01',
'2018/12/01','2018/12/31','2018/12/31','2018/12/31','2019/01/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  86410, 16300, DEFAULT, 60760, 42000, 1850, 860,
  410, 27, 37, 12,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2018/12/01',
'2018/11/01','2018/11/30','2018/11/30','2018/11/30','2018/12/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  86410, 16300, DEFAULT, 23547, 15034, 1850, 860,
  410, 27, 17, 5,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2018/11/01',
'2018/10/01','2018/10/31','2018/10/31','2018/10/31','2018/11/30',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  86410, 16300, DEFAULT, 15300, 12000, 1850, 860,
  410, 27, 12, 10,DEFAULT, NULL,'110-23-0310818'
);


INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2018/10/01',
'2018/09/01','2018/09/30','2018/09/30','2018/09/30','2018/10/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  52770, 20850, DEFAULT, 4470, 6090, 1850, 860,
  386, 15, 12, 4,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'201-201','전로하','2018/09/01',
'2018/08/01','2018/08/31','2018/08/31','2018/08/31','2018/09/30',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  52770, 20850, DEFAULT, 4470, 6090, 1850, 860,
  386, 15, 12, 4,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'202-101','허용순','2018/11/01',
'2018/10/01','2018/10/31','2018/10/31','2018/10/31','2018/11/30',
  '완료',1,'Y',
 29290, 29310, 19110, 1080, 4660, 2950, 2420, 1200,
  86410, 16300, DEFAULT, 15300, 12000, 1850, 860,
  410, 27, 12, 10,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'202-101','허용순','2018/10/01',
'2018/09/01','2018/09/30','2018/09/30','2018/09/30','2018/10/31',
  '완료',1,'Y',
  20690, 20600, 13470, 760, 3290, 2090, 650, 960,
  52770, 20850, DEFAULT, 4470, 6090, 1850, 860,
  386, 15, 12, 4,DEFAULT, NULL,'110-23-0310818'
);

INSERT INTO BILL VALUES(
BILL_SEQ.NEXTVAL,'202-101','허용순','2018/09/01',
'2018/08/01','2018/08/31','2018/08/31','2018/08/31','2018/09/30',
  '완료',1,'Y',
  29290, 29310, 19110, 1080, 4660, 2950, 2420, 1200,
  52770, 20850, DEFAULT, 4470, 6090, 1850, 860,
  386, 15, 12, 4,DEFAULT, NULL,'110-23-0310818'
);

--================================================================================

DROP TABLE VBANK cascade constraints;
-- 가상계좌 테이블 생성
CREATE TABLE VBANK (
	VBANK_NUM	VARCHAR2(20) NOT NULL,
	VBANK_NAME VARCHAR2(20) NOT NULL,
	VBANK_HOLDER VARCHAR2(15) DEFAULT '하이아파트'	NOT NULL,
	VBANK_DATE DATE NULL,
  CONSTRAINT PK_VB PRIMARY KEY(VBANK_NUM)
);

-- COMMENT 삽입
COMMENT ON COLUMN vbank.vbank_num IS '계좌번호';
COMMENT ON COLUMN vbank.vbank_name IS '은행명';
COMMENT ON COLUMN VBANK.VBANK_HOLDER IS '예금주';
COMMENT ON COLUMN VBANK.VBANK_DATE IS '입금기한';

-- vbank insert

INSERT INTO VBANK VALUES(
'110-23-0310818', '신한은행', DEFAULT, '19/09/30'
);

INSERT INTO VBANK VALUES(
'763201-01-148210', '국민은행', DEFAULT, '19/09/30'
);

INSERT INTO VBANK VALUES(
'175320-51-018603', '하나은행', DEFAULT, '19/09/30'
);

INSERT INTO VBANK VALUES(
'402172-01-001467', '우체국', DEFAULT, '19/09/30'
);

---=============================================================================
-- SMS 테이블 생성

drop table sms cascade constraints;

CREATE TABLE SMS (
	EMPNO	VARCHAR2(20) NOT NULL,
	TEL	VARCHAR2(12)	DEFAULT '02-751-1114'	NOT NULL,
	userphone	VARCHAR2(20)		NOT NULL,
	TEXT	VARCHAR2(80)		NULL,
	TYPE	VARCHAR2(10)	DEFAULT 'SMS'	NULL,
	STATE_MESSAGE	VARCHAR2(10)		NULL,
	COUNTRY	VARCHAR2(5)	DEFAULT '82'	NOT NULL,
	STATUS_CODE	VARCHAR2(5)		NOT NULL,
  CONSTRAINT FK_EMPLOYEE FOREIGN KEY(EMPNO) REFERENCES EMPLOYEE(EMPNO) ON DELETE CASCADE
);

COMMENT ON COLUMN SMS.EMPNO IS '사번';
COMMENT ON COLUMN SMS.TEL IS '관리소대표번호';
COMMENT ON COLUMN SMS.userphone IS '발신자번호';
COMMENT ON COLUMN SMS.text IS '메세지';
COMMENT ON COLUMN SMS.type IS '메세지타입';
COMMENT ON COLUMN SMS.state_message IS '접수상태';
COMMENT ON COLUMN SMS.COUNTRY IS '국가번호';
COMMENT ON COLUMN SMS.status_code IS '접수코드';

-- insert sms
INSERT INTO SMS VALUES(
 'S001', DEFAULT, '010-6547-3214', 
 '2019년08월분 관리비고지서입니다.',
 DEFAULT, '성공', DEFAULT, '2000' 
);

INSERT INTO SMS VALUES(
 'S001', DEFAULT, '010-6547-3214', 
 '2019년07월분 관리비고지서입니다.',
 DEFAULT, '성공', DEFAULT, '2000' 
);

INSERT INTO SMS VALUES(
 'S001', DEFAULT, '010-6547-3214', 
 '2019년06월분 관리비고지서입니다.',
 DEFAULT, '성공', DEFAULT, '2000' 
);

INSERT INTO SMS VALUES(
 'S001', DEFAULT, '010-6547-3214', 
 '2019년05월분 관리비고지서입니다.',
 DEFAULT, '성공', DEFAULT, '2000' 
);

INSERT INTO SMS VALUES(
 'S001', DEFAULT, '010-6547-3214', 
 '2019년04월분 관리비고지서입니다.',
 DEFAULT, '성공', DEFAULT, '2000' 
);

--============================================================================
-- PAYMENT 테이블 생성

drop table payment cascade constraints;

CREATE TABLE PAYMENT (
	MERCHANT_UID	NUMBER		NOT NULL,
	name	VARCHAR2(20)	DEFAULT '관리비고지서'	NOT NULL,
	AMOUNT	NUMBER		NOT NULL,
	currency	VARCHAR2(10)	DEFAULT 'KRW'	NOT NULL,
	PG	VARCHAR2(30)		NOT NULL,
	pay_method	VARCHAR2(50)	DEFAULT 'card'	NOT NULL,
	card_quota	NUMBER		NULL,
	buyer_name	VARCHAR2(20)		NULL,
	BUYER_TEL	VARCHAR2(20)		NOT NULL,
	BUYER_EMAIL	VARCHAR2(50)		NULL
);

-- comment
COMMENT ON COLUMN payment.merchant_uid IS '고유고지서번호';
COMMENT ON COLUMN payment.name IS '고지서명';
COMMENT ON COLUMN payment.amount IS '결제금액';
COMMENT ON COLUMN payment.currency IS '화폐단위';
COMMENT ON COLUMN payment.pg IS 'PG';
COMMENT ON COLUMN payment.pay_method IS '결제수단';
COMMENT ON COLUMN payment.card_quota IS '할부금액';
COMMENT ON COLUMN payment.buyer_name IS '결제자이름';
COMMENT ON COLUMN PAYMENT.BUYER_TEL IS '결제자연락처';
COMMENT ON COLUMN payment.buyer_email IS '결제자이메일';

-- INSERT PAYMENT

INSERT INTO PAYMENT VALUES(
'10000000000001', DEFAULT, 152560, DEFAULT, 'PG', '가상계좌',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000002', DEFAULT, 141490, DEFAULT, '카카오페이', '간편결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000003', DEFAULT, 168060, DEFAULT, '나이스정보통신', '가상계좌',
NULL, '허용순', '010-2685-4111', 'horse4797@naver.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000004', DEFAULT, 151930, DEFAULT, '이니시스', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000005', DEFAULT, 152560, DEFAULT, '나이스정보통신', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000006', DEFAULT, 152560, DEFAULT, 'PAYCO', '간편결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000007', DEFAULT, 185340, DEFAULT, 'PAYCO', '간편결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000008', DEFAULT, 196660, DEFAULT, 'LGU+', '카드수기결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000009', DEFAULT, 270690, DEFAULT, '나이스정보통신', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000010', DEFAULT, 270690, DEFAULT, 'PG', '가상계좌',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000011', DEFAULT, 206511, DEFAULT, '나이스정보통신', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000012', DEFAULT, 195230, DEFAULT, '다날', '실시간계좌이체',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000013', DEFAULT, 149400, DEFAULT, 'LGU+', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000014', DEFAULT, 149400, DEFAULT, 'KCP', '카드결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

INSERT INTO PAYMENT VALUES(
'10000000000015', DEFAULT, 222740, DEFAULT, '카카오페이', '간편결제',
NULL, '전로하', '010-8001-6812', 'dd55555bb@gmail.com'
);

--=============================================================================
drop table receipt cascade constraints;
-- RECEIPT 테이블 생성
CREATE TABLE RECEIPT (
	imp_uid	VARCHAR2(40)		NOT NULL,
  MERCHANT_UID NUMBER		NOT NULL,
	apply_num	VARCHAR2(40)		NULL,
	VBANK_NUM	VARCHAR2(20)		NULL,
	NAME	VARCHAR2(20)	DEFAULT '관리비고지서'	NOT NULL,
	pay_method	VARCHAR2(30)	DEFAULT 'card'	NOT NULL,
	PAID_AMOUNT	NUMBER		NOT NULL,
	PG_PROVIDER	VARCHAR2(40)		NOT NULL,
	pai_date	DATE		NOT NULL,
	receipt_url	VARCHAR2(100)		NULL,
	buyer_name	VARCHAR2(20)		NULL,
	buyer_tel	VARCHAR2(20)		NOT NULL,
	BUYER_EMAIL	VARCHAR2(30)		NULL,
	company	VARCHAR2(15)	DEFAULT '하이아파트'	NOT NULL,
	STATUS	VARCHAR2(20)		NOT NULL,	
  CONSTRAINT PK_RECEIPT PRIMARY KEY(IMP_UID)
);

--COMMIT
COMMENT ON COLUMN receipt.imp_uid IS '고유영수증ID';
COMMENT ON COLUMN receipt.apply_num IS '카드승인번호';
COMMENT ON COLUMN receipt.vbank_num IS '가상계죄입금번호';
COMMENT ON COLUMN receipt.name IS '고지서명';
COMMENT ON COLUMN receipt.pay_method IS '결제수단';
COMMENT ON COLUMN receipt.paid_amount IS '결제금액';
COMMENT ON COLUMN RECEIPT.PG_PROVIDER IS '결제PG종류';
COMMENT ON COLUMN receipt.pai_dat IS '결제승인시각';
COMMENT ON COLUMN receipt.receipt_url IS '매출전표URL';
COMMENT ON COLUMN receipt.buyer_name IS '결제자이름';
COMMENT ON COLUMN receipt.buyer_tel IS '결제자전화번호';
COMMENT ON COLUMN receipt.buyer_email IS '결제자이메일';
COMMENT ON COLUMN receipt.company IS '아파트명';
COMMENT ON COLUMN RECEIPT.STATUS IS '결제상태';
COMMENT ON COLUMN receipt.merchant_uid IS '고유고지서번호';

-- INSERT

INSERT INTO RECEIPT VALUES(
'5d8b920eb1b56e000675bc59', 10000000000015, NULL, NULL, 	
DEFAULT, '간편결제', 222740, '카카오페이', '2018/11/10',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d8b920eb1b56e000675bc57', 10000000000014, '5d8b920eb1b56e000675bc59', NULL, 	
DEFAULT, '카드결제', 149400, 'KCP', '2018/09/11',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d8b904eb1b56e000675bbbd', 10000000000013, '5d8b920eb1b56e000675bc59', NULL, 	
DEFAULT, '카드결제', 149400, 'LGU+', '2018/10/05',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d8b95aeb1b56e000675bd6d', 10000000000012, NULL, '110-23-0310818', 	
DEFAULT, '실시간계좌이체', 195230, '다날', '2018/11/23',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d8b8a28b1b56e000675ba80', 10000000000011, '5d8b8a28b1b56e000675ba80', NULL, 	
DEFAULT, '카드결제', 206511, '나이스정보통신', '2018/12/23',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c71bb1b56e00068008de', 10000000000010, NULL, '110-23-0310818',	
DEFAULT, '가상계좌', 270690, 'PG', '2019/01/23',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c599b1b56e00068006b9', 10000000000001, NULL, '110-23-0310818',	
DEFAULT, '가상계좌', 152560, 'PG', '2019/09/23',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c4e8b1b56e0006800558', 10000000000002, NULL, NULL, 	
DEFAULT, '간편결제', 141490, '카카오페이', '2019/08/10',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c6e1b1b56e0006800871', 10000000000003, NULL,'110-23-0310818',	
DEFAULT, '가상계좌', 168060, '나이스정보통신', '2019/08/10',	NULL, '허용순', '010-2685-4111', 'horse4797@naver.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c4e8b1b56e000680055f', 10000000000004, '5d95c4e8b1b56e000680055f', NULL, 	
DEFAULT, '카드결제', 151930, '이니시스', '2019/07/23',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c5f4b1b56e0006800720', 10000000000005, '5d95c5f4b1b56e0006800720', NULL, 	
DEFAULT, '카드결제', 152560, '나이스정보통신', '2019/06/06',	NULL, '전로하', '010-1234-2222',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c533b1b56e00068005de', 10000000000006, NULL, NULL, 	
DEFAULT, '간편결제', 152560, 'PAYCO', '2019/05/10',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c484b1b56e00068004b8', 10000000000007, NULL, NULL, 	
DEFAULT, '간편결제', 185340, 'PAYCO', '2019/04/10',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제취소' 
);

INSERT INTO RECEIPT VALUES(
'5d95c2b3b1b56e00068001d9', 10000000000008, NULL, NULL, 	
DEFAULT, '카드수기결제', 196660, 'LGU+', '2019/03/07',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제완료' 
);

INSERT INTO RECEIPT VALUES(
'5d95c074b1b56e00067ffe79', 10000000000009, NULL, NULL, 	
DEFAULT, '카드결제', 270690, '나이스정보통신', '2019/02/10',	NULL, '전로하', '010-8001-6812',
'dd55555bb@gmail.com', DEFAULT, '결제취소' 
);

---============================================================================
-- 결제 내역 출력용 view 쿼리
DROP VIEW RECEIPT_VIEW;

CREATE VIEW receipt_view
AS
SELECT A.USERID, A.USERNAME, L.BILL_YEAR_MONTH, R.PAID_AMOUNT
FROM APTUSER A, BILL L, RECEIPT R
WHERE A.USERID = L.USERID AND L.MERCHANT_UID = R.MERCHANT_UID
with read only;

-------------------------------
DROP VIEW BASE_VIEW;
-- 부과기초작업 테이블
CREATE VIEW BASE_VIEW
AS
SELECT MERCHANT_UID, IMPOSE_STATUS, BILL_YEAR_MONTH, 
CALCULATE_START_DAY, CALCULATE_END_DAY, IMPOSE_END_DATE,
ACCEPT_DATE, CUTOFF_DATE, IMPOSE_COUNT 
FROM BILL
WITH CHECK OPTION;

INSERT INTO BASE_VIEW VALUES(
BILL_SEQ.NEXTVAL,'진행', '2019/11/01',
'2019/10/01','2019/10/30','2019/10/30',
'2019/10/30','2019/10/30',1  
);

---------------------------------
DROP VIEW IMPOSE_VIEW;
-- 관리비부과처리 뷰 테이블
CREATE VIEW impose_VIEW
AS
SELECT MERCHANT_UID, userid, GENERAL_COST,
      guard_cost,	clean_cost	,	DISINFECT_COST,
      ELEVATOR_COST,	REPAIR_COST,	commission,	FIREINSURANCE_COST,	
      ELECTRIC_COST,		TV_COST,  WATER_COST,	HEATING_COST,	HWATER_COST,	  
      ALLELECTRIC_COAT,	ALLWATER_COST,
      ELECTRIC_USAGE,	water_usage, HEATING_USAGE,  HWATER_USAGE
FROM BILL
WITH CHECK OPTION;

-----------------------------------
DROP VIEW IMPOSE_END_VIEW;

-- 부과마감등록 샘플 뷰 테이블
CREATE VIEW impose_end_VIEW
AS
SELECT MERCHANT_UID, USERID, 
        IMPOSE_STATUS, BILL_YEAR_MONTH, 
        CALCULATE_START_DAY, CALCULATE_END_DAY,
        IMPOSE_FINISH as "부과진행",
        CUTOFF_DATE, IMPOSE_END_DATE, IMPOSE_COUNT, accept_date
FROM BILL
WITH CHECK OPTION;

----------------------------------------
DROP VIEW BILL_VIEW;
-- 고지서 샘플 뷰 테이블
CREATE VIEW bill_VIEW
AS
SELECT MERCHANT_UID, USERID, 
       SUM(GENERAL_COST + CLEAN_COST +	DISINFECT_COST +
        ELEVATOR_COST +	REPAIR_COST + GUARD_COST + 	FIREINSURANCE_COST + 
        COMMISSION + ELECTRIC_COST +	ALLELECTRIC_COAT + TV_COST +
      HEATING_COST + 	HWATER_COST +	WATER_COST + ALLWATER_COST + ARREARS) AS "amount",
      ARREARS, 
      SUM(GENERAL_COST + CLEAN_COST +	DISINFECT_COST +
        ELEVATOR_COST +	REPAIR_COST + GUARD_COST + 	FIREINSURANCE_COST + 
        COMMISSION + ELECTRIC_COST +	ALLELECTRIC_COAT + TV_COST +
      HEATING_COST + 	HWATER_COST +	WATER_COST + ALLWATER_COST + ARREARS) AS "before_amount",
      floor((NVL(ARREARS,0)*1.3)) AS "arrears_fine",
      floor((SUM(GENERAL_COST + CLEAN_COST +	DISINFECT_COST +
        ELEVATOR_COST +	REPAIR_COST + GUARD_COST + 	FIREINSURANCE_COST + 
        COMMISSION + ELECTRIC_COST +	ALLELECTRIC_COAT + TV_COST +
      HEATING_COST + 	HWATER_COST +	WATER_COST + ALLWATER_COST + ARREARS))*1.1) AS "after_amount"      
FROM BILL
GROUP BY MERCHANT_UID, USERID, ARREARS
with read only;

--Create Table payment_end();

-- 수납처리 테이블 만들기 receiptf
--userId : String

-- merchantUid : long

-- billYearMonth : Date

-- amout : int

-- arrears : int

-- paidAmount : int

-- -status : String

-- payMethod : String

-- constranits 조건 생성 시작 ==========================================================================
ALTER TABLE bill ADD CONSTRAINT FK_vbank_TO_bill_1 FOREIGN KEY (	vbank_num)
REFERENCES vbank (	vbank_num);

ALTER TABLE payment ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (	merchant_uid);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_BILL_TO_PAYMENT_1 FOREIGN KEY (	MERCHANT_UID)
REFERENCES bill (	merchant_uid) on delete cascade;;

ALTER TABLE RECEIPT ADD CONSTRAINT FK_PAYMENT_TO_RECEIPT_1 FOREIGN KEY (	MERCHANT_UID)
REFERENCES payment (	merchant_uid) on delete cascade;

-- constranits 조건 생성 끝 ====================================================


COMMIT;
--  관리비 및 결제  db 끝*********************************************************
