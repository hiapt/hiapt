/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-10-07 14:55:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.employee.approval;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import draft.model.vo.Draft;
import java.util.ArrayList;

public final class docList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("draft.model.vo.Draft");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" ");

 	ArrayList<Draft> list = (ArrayList<Draft>)request.getAttribute("list");
 	
 
      out.write("\r\n");
      out.write("<!-- 타이틀 시작 -->\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("\t<div id=\"breadcrumb\" class=\"col-xs-12\">\r\n");
      out.write("\t\t<!-- 삼디다스 버튼 -->\r\n");
      out.write("\t\t<a href=\"#\" class=\"show-sidebar\"> <i class=\"fa fa-bars\"></i>\r\n");
      out.write("\t\t</a>\r\n");
      out.write("\t\t<ol class=\"breadcrumb pull-left\">\r\n");
      out.write("\t\t\t<!-- 첫번째 타이틀 시작 -->\r\n");
      out.write("\t\t\t<li><a href=\"index.html\">전자결재</a></li>\r\n");
      out.write("\t\t\t<!-- 두번째 하위 메뉴 시작 -->\r\n");
      out.write("\t\t\t<li><a href=\"#\">전체목록</a></li>\r\n");
      out.write("\t\t\t<!-- 세번째 하위 메뉴 시작 -->\r\n");
      out.write("\t\t\t<!--li><a href=\"#\">부과항목등록</a></li-->\r\n");
      out.write("\t\t</ol>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 타이틀 끝 -->\r\n");
      out.write("<form action=\"\" method=\"post\">\r\n");
      out.write("<h4>전체 문서 : ");
      out.print( list.size() );
      out.write("개 </h4>\r\n");
      out.write("<table class=\"table beauty-table table-hover\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"10\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"checkbox\" style=\"margin:0px; margin-left: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"fa fa-square-o small\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div></th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"75\" style=\"text-align: center;\">첨부파일</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"100\" style=\"text-align: center;\">문서번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th style=\"text-align: center;\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"150\" style=\"text-align: center;\">기안자</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"100\" style=\"text-align: center;\">기안일</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"150\" style=\"text-align: center;\">문서종류</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th width=\"80\" style=\"text-align: center;\">진행상태</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t");
 for(int i = 0; i < list.size(); i++) { 
							Draft d = list.get(i);
      out.write("\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"checkbox\" style=\"margin:0px; margin-left: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"fa fa-square-o small\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><i class=\"fa fa-paperclip\"></i></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( d.getDocno() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"/hiapt/index.jsp?#/hiapt/dview?docno=");
      out.print(  d.getDocno() );
      out.write('"');
      out.write('>');
      out.print( d.getDoctitle());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( d.getEmpno() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( d.getDraftdate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( d.getFormcode());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
 if(d.getProgress().equals("0")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t 대기\r\n");
      out.write("\t\t\t\t\t\t\t ");
 } else if (d.getProgress().equals("1")) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t 승인\r\n");
      out.write("\t\t\t\t\t\t\t");
} else if (d.getProgress().equals("2")) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t반려\r\n");
      out.write("\t\t\t\t\t\t\t");
 } else if (d.getProgress().equals("3")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t보류\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t</table>\t\r\n");
      out.write("\t<div style=\"float: right;\">\r\n");
      out.write("\t<input type=\"button\" value=\"이동\" class=\"btn btn-default btn-xs\" style=\"letter-spacing: 7px; padding-left: 10px;\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
