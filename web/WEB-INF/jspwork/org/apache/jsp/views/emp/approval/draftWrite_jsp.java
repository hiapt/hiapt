/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-10-11 14:54:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.emp.approval;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import draft.model.vo.Draft;

public final class draftWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("draft.model.vo.Draft");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
 


      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/hiapt/resources/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/hiapt/resources/smarteditor/js/HuskyEZCreator.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("    //전역변수선언\r\n");
      out.write("    var editor_object = [];\r\n");
      out.write("     \r\n");
      out.write("    nhn.husky.EZCreator.createInIFrame({\r\n");
      out.write("        oAppRef: editor_object,\r\n");
      out.write("        elPlaceHolder: \"smarteditor\",\r\n");
      out.write("        sSkinURI: \"/hiapt/resources/smarteditor/SmartEditor2Skin.html\", \r\n");
      out.write("        htParams : {\r\n");
      out.write("            // 툴바 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("            bUseToolbar : true,             \r\n");
      out.write("            // 입력창 크기 조절바 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("            bUseVerticalResizer : false,     \r\n");
      out.write("            // 모드 탭(Editor | HTML | TEXT) 사용 여부 (true:사용/ false:사용하지 않음)\r\n");
      out.write("            bUseModeChanger : true, \r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("     \r\n");
      out.write("    //전송버튼 클릭이벤트\r\n");
      out.write("    $(\"#savebutton\").click(function(){\r\n");
      out.write("        //id가 smarteditor인 textarea에 에디터에서 대입\r\n");
      out.write("        editor_object.getById[\"smarteditor\"].exec(\"UPDATE_CONTENTS_FIELD\", []);\r\n");
      out.write("         \r\n");
      out.write("        // 이부분에 에디터 validation 검증\r\n");
      out.write("         \r\n");
      out.write("        //폼 submit\r\n");
      out.write("        $(\"#frm\").submit();\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("       //전송버튼 클릭이벤트\r\n");
      out.write("    $(\"#tempbutton\").click(function(){\r\n");
      out.write("        //id가 smarteditor인 textarea에 에디터에서 대입\r\n");
      out.write("        \r\n");
      out.write("        editor_object.getById[\"smarteditor\"].exec(\"UPDATE_CONTENTS_FIELD\", []);\r\n");
      out.write("         \r\n");
      out.write("        // 이부분에 에디터 validation 검증\r\n");
      out.write("         \r\n");
      out.write("        //폼 submit\r\n");
      out.write("        $(\"#tmp\").submit();\r\n");
      out.write("    })\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("function formview() {\r\n");
      out.write("\tvar width = '700';\r\n");
      out.write("\tvar height = '600';\r\n");
      out.write("\tvar left = Math.ceil((window.screen.width - width) / 2);\r\n");
      out.write("\tvar top = Math.ceil((window.screen.width - height) / 2);\r\n");
      out.write("\t\r\n");
      out.write("\twindow.open('/hiapt/views/emp/approval/formView.jsp' , '문서보기', 'width=' + width + ', height=' + height + ', left=' + left + ', top' + top);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("\tcolor: #444;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("fieldset {\r\n");
      out.write("\twidth: 900px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tborder: solid 3px #fbfbf0;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\tpadding: 15px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-size: 11pt;\r\n");
      out.write("\theight: 60px;\r\n");
      out.write("\tbackground-color: rgba(67, 110, 144, 0.9);\r\n");
      out.write("\tcolor: #fbfbf0;\r\n");
      out.write("\tborder-radius: 9px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\tborder: solid 3px #fbfbf0;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\tpadding-top: 15px;\r\n");
      out.write("\tpadding-bottom: 15px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-size: 10.5pt;\r\n");
      out.write("\theight: 60px;\r\n");
      out.write("\tcolor: #214c70;\r\n");
      out.write("\tfont-weight: 600; \r\n");
      out.write("\tborder-radius: 9px;\r\n");
      out.write("\tbackground-color: rgba(67, 110, 144, 0.2);\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#formselect {\r\n");
      out.write("\tborder-radius: 4px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\twidth: 205px;\r\n");
      out.write("\theight: 28px;\r\n");
      out.write("\tpadding-left: 5px;\r\n");
      out.write("\tcolor: #436E90;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#boxselect {\r\n");
      out.write("\tborder-radius: 4px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\twidth: 175px;\r\n");
      out.write("\theight: 28px;\r\n");
      out.write("\tpadding-left: 5px;\r\n");
      out.write("\tcolor: #436E90;\r\n");
      out.write("}\r\n");
      out.write("legend {\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tfont-size: 13pt;\r\n");
      out.write("\tcolor: #436E90;\r\n");
      out.write("\tline-height: 45px;\r\n");
      out.write("\tmargin-bottom: 15px;\r\n");
      out.write("\tborder-bottom: dashed 1px #769fb3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 타이틀 시작 -->\r\n");
      out.write("<form action=\"/hiapt/dsend\" method=\"post\" id=\"frm\">\r\n");
      out.write("<form action=\"/hiapt/dtsend\" method=\"post\" id=\"tmp\">\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("\t<div id=\"breadcrumb\" class=\"col-xs-12\" style=\"position: fixed; padding-top: 10px; padding-bottom: 2px;\">\r\n");
      out.write("\t\t&nbsp;&nbsp;\r\n");
      out.write("\t\t<input type=\"button\" id=\"savebutton\" value=\"기안하기\" class=\"btn btn-primary btn-sm\"\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tstyle=\"font-size: 11pt; letter-spacing: 2px;\">&nbsp;&nbsp;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"button\" value=\"임시저장\" class=\"btn btn-default btn-sm\" id=\"tempbutton\"\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tstyle=\"font-size: 11pt; letter-spacing: 2px;\">&nbsp;&nbsp;\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div style=\"height: 65px;\"></div>\r\n");
      out.write("<!-- 타이틀 끝 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"form\">\r\n");
      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"progress\" value=\"0\">\r\n");
      out.write("\r\n");
      out.write("<fieldset style=\"border: none\">\r\n");
      out.write("<legend>기본 설정 <br></legend> \r\n");
      out.write("<table style=\"width:900px; height: 50px;\" >\r\n");
      out.write("\r\n");
      out.write("<tr><th style=\" width: 120px;\">문서 종류</th>\r\n");
      out.write("<td width=\"415px;\" style=\"padding-bottom: 3px;\" colspan=\"3\">\r\n");
      out.write("<select name=\"formtype\" id=\"formselect\">\r\n");
      out.write("<option>공용</option>\r\n");
      out.write("</select>&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<select name=\"formcode\" id=\"formselect\">\r\n");
      out.write("<option value=\"100\">일반 기안서</option>\r\n");
      out.write("<option value=\"110\">휴가 신청서</option>\r\n");
      out.write("<option value=\"120\">기타1</option>\r\n");
      out.write("</select>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<!-- <button style=\"height: 25px;\">문서보기</button> -->\r\n");
      out.write("<button onclick=\"formview();\" class=\"btn btn-primary btn-xs\" style=\"position: static;  letter-spacing: 2px;\">문서보기</button>\r\n");
      out.write("</td>\r\n");
      out.write("<th style=\"width: 120px;\">작성자</th>\r\n");
      out.write("<td width=\"120px;\" style=\"width: 120px;\">\r\n");
      out.write("<input type=\"text\" name=\"drafter\" value=\"S001\" readonly \r\n");
      out.write("style = \"width: 100px; border: none; background: none; text-align: center; margin-top: 1px;\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr id=\"tab2\">\r\n");
      out.write("<th style=\"width: 120px;\">공개 여부</th>\r\n");
      out.write("<td width=\"25%\">\r\n");
      out.write("<input type=\"radio\" name=\"display\" value=\"Y\"\t required=\"required\"> 공개 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"display\" value=\"N\" required=\"required\" checked=\"checked\"> 비공개</td>\r\n");
      out.write("\r\n");
      out.write("<th style=\"width: 120px;\">문서함</th>\r\n");
      out.write("<td width=\"25%\">\r\n");
      out.write("<select name=\"newbox\" id=\"boxselect\">\r\n");
      out.write("<option >없음 (기본)</option>\r\n");
      out.write("<option value=\"0\">새 문서함1</option>\r\n");
      out.write("<option value=\"1\">새 문서함2</option>\r\n");
      out.write("<option value=\"2\">새 문서함3</option>\r\n");
      out.write("<option value=\"3\">새 문서함4</option>\r\n");
      out.write("<option value=\"4\">새 문서함5</option>\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("<th style=\"width: 120px;\">결재자</th>\r\n");
      out.write("<td width=\"120px;\" style=\"width: 120px;\">\r\n");
      out.write("<input type=\"text\" name=\"approver\" value=\"관리자로 고정\" readonly \r\n");
      out.write("style = \"width: 100px; border: none; background: none; text-align: center; margin-top: 1px;\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</fieldset>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>상세 설정</legend>\r\n");
      out.write("</fieldset>\r\n");
      out.write("\r\n");
      out.write("<input type=\"text\" placeholder=\"제목 입력\" name= \"drafttitle\"  required=\"required\"\r\n");
      out.write("style=\"width: 900px; height: 30px; border: solid 1px #afafaf; border-radius: 5px; padding-left: 5px;\">\r\n");
      out.write("\r\n");
      out.write("<div style=\"width:900px; height:450px; background-color: white; margin-top: 15px;\">\r\n");
      out.write("<textarea name=\"doccontent\" id=\"smarteditor\" rows=\"10\" cols=\"100\" style=\"width:897px; height:400px;\" required=\"required\"></textarea>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<fieldset style=\"margin-top: 20px;\">\r\n");
      out.write("<legend>파일 첨부</legend>\r\n");
      out.write("<input type=\"file\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("</form> \r\n");
      out.write("</body>\t\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
