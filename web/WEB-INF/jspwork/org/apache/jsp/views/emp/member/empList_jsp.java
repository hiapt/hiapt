/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-10-11 15:18:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.emp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import employee.model.vo.Employee;
import java.util.ArrayList;

public final class empList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("employee.model.vo.Employee");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    ArrayList<Employee> list = (ArrayList<Employee>)request.getAttribute("list");
    
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>직원조회</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write(".check {\r\n");
      out.write("\t    display: inline-block !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#navi{\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\twidth: 110px;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tfont-family:\"굴림\";\r\n");
      out.write("\tfont-weight:600;\r\n");
      out.write("\tfont-size:14px;\r\n");
      out.write("\tpadding: 5px 25px;\r\n");
      out.write("\tmargin : 5px 25px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tbackground: #365873;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body style=\"background-color: white\">\r\n");
      out.write("<div id=\"navi\" align=\"left\"> 직원조회</div>\r\n");
      out.write("<div class=\"box-content\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"delete\" class=\"check\">삭제\r\n");
      out.write("\t<div class=\"input-group\" style =\"width: 25%;  float: right;\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control input-lg\" placeholder=\"사번 검색\">\r\n");
      out.write("\t\t\t\t<span class=\"input-group-btn\">\r\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-primary\" type=\"button\">\r\n");
      out.write("\t\t\t\t\t\t<i class=\"fa fa-search\"></i>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t<table class=\"table beauty-table table-hover\"\r\n");
      out.write("\t\t\tstyle=\"text-align: center;\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th width=\"10\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"checkbox\" style=\"margin: 0px; margin-left: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<label> <input type=\"checkbox\"> <i\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"fa fa-square-o small\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">사번</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">이름</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">직급</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">입사년도</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">휴대전화</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">주소</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">이메일</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">급여</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"text-align: center;\">기타정보</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t");

			for(int i = 0; i < list.size(); i++) { 
				Employee e = list.get(i);
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( i + 1 );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpHireDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpPhone() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpAddress() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpEmail() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getSalary() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( e.getEmpEtc() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
